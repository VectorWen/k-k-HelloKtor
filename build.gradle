group 'com.vector'
version '1.0'

buildscript {
    ext.kotlin_version = '1.3.0'
    ext.ktor_version = '1.0.0-beta-3'

    repositories {
        mavenCentral()
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

sourceCompatibility = 1.8
compileKotlin { kotlinOptions.jvmTarget = "1.8" }
compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }

mainClassName = 'com.vector.ktor.HelloKtorKt'
kotlin { experimental { coroutines "enable" } }

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
}


task copyJars(type: Copy) {
    from configurations.runtimeClasspath
    into 'docker/lib' // 目标位置
}

jar {
    def cp = ''
    def dir = new File("docker/lib")
    dir.eachFile { name ->
        cp += " lib/${name.name}"
    }
    cp = cp.trim()

    manifest {
        attributes 'Class-Path': cp
        attributes 'Main-Class': 'com.vector.ktor.HelloKtorKt'
    }

    classifier = 'app'
    excludes = ["*.jar"]
    doLast {
        def appName = "${rootProject.name}-${version}-app.jar"
        copy {
            from "build/libs/${appName}"
            into "docker"
            rename("$appName", "app.jar")
        }
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    testImplementation 'junit:junit:4.12'
}